<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23setContainer' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23setContainer' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getParameter' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getParameter' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getSubscribedServices' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getSubscribedServices' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23has' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23has' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23get' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23get' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23generateUrl' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23generateUrl' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23forward' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23forward' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirect' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirect' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirectToRoute' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirectToRoute' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23json' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23json' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23file' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23file' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addFlash' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addFlash' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isGranted' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isGranted' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23denyAccessUnlessGranted' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23denyAccessUnlessGranted' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderView' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderView' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23render' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23render' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderForm' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderForm' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23stream' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23stream' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createNotFoundException' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createNotFoundException' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createAccessDeniedException' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createAccessDeniedException' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createForm' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createForm' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createFormBuilder' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createFormBuilder' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getDoctrine' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getDoctrine' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getUser' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getUser' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isCsrfTokenValid' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isCsrfTokenValid' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23dispatchMessage' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23dispatchMessage' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addLink' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addLink' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%24container' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%24container' => 1,
'App%5CController%5CBatimentController' => 0,
'[C]App%5CController%5CBatimentController' => 1,
'App%5CController%5CBatimentController%23index' => 0,
'[C]App%5CController%5CBatimentController%23index' => 1,
'App%5CController%5CBatimentController%23getBatiment' => 2,
'[C]App%5CController%5CBatimentController%23getBatiment' => 1,
'App%5CController%5CBatimentController%23getBatimentOwnerUser' => 3,
'[C]App%5CController%5CBatimentController%23getBatimentOwnerUser' => 1,
'App%5CController%5CBatimentController%23getBatimentOwnerEntite' => 4,
'[C]App%5CController%5CBatimentController%23getBatimentOwnerEntite' => 1,
'App%5CController%5CBatimentController%23blockPropUser' => 5,
'[C]App%5CController%5CBatimentController%23blockPropUser' => 1,
'App%5CController%5CBatimentController%23unblockPropUser' => 6,
'[C]App%5CController%5CBatimentController%23unblockPropUser' => 1,
'App%5CController%5CBatimentController%23addLocalisation' => 7,
'[C]App%5CController%5CBatimentController%23addLocalisation' => 1,
'App%5CController%5CEmployesController' => 0,
'[C]App%5CController%5CEmployesController' => 1,
'App%5CController%5CEmployesController%23__construct' => 0,
'[C]App%5CController%5CEmployesController%23__construct' => 1,
'App%5CController%5CEmployesController%23getListEmployes' => 8,
'[C]App%5CController%5CEmployesController%23getListEmployes' => 1,
'App%5CController%5CEmployesController%23putEmploye' => 9,
'[C]App%5CController%5CEmployesController%23putEmploye' => 1,
'App%5CController%5CEmployesController%24security' => 0,
'[C]App%5CController%5CEmployesController%24security' => 1,
'App%5CController%5CEmployesController%24repoUser' => 0,
'[C]App%5CController%5CEmployesController%24repoUser' => 1,
'App%5CController%5CEmployesController%24manager' => 0,
'[C]App%5CController%5CEmployesController%24manager' => 1,
'App%5CController%5CEntiteController' => 0,
'[C]App%5CController%5CEntiteController' => 1,
'App%5CController%5CEntiteController%23index' => 0,
'[C]App%5CController%5CEntiteController%23index' => 1,
'App%5CController%5CEntiteController%23blockEntite' => 10,
'[C]App%5CController%5CEntiteController%23blockEntite' => 1,
'App%5CController%5CEntiteController%23unblockEntite' => 11,
'[C]App%5CController%5CEntiteController%23unblockEntite' => 1,
'App%5CController%5CEntiteController%23getEntitesOfAdmin' => 12,
'[C]App%5CController%5CEntiteController%23getEntitesOfAdmin' => 1,
'App%5CController%5CEntiteController%23getEntitesOfGestionnaire' => 13,
'[C]App%5CController%5CEntiteController%23getEntitesOfGestionnaire' => 1,
'App%5CController%5CEntiteController%23getEntiteSon' => 14,
'[C]App%5CController%5CEntiteController%23getEntiteSon' => 1,
'App%5CController%5CEntiteController%23getEntiteFatherByType' => 15,
'[C]App%5CController%5CEntiteController%23getEntiteFatherByType' => 1,
'App%5CController%5CEntiteController%23addLocalisationEntite' => 16,
'[C]App%5CController%5CEntiteController%23addLocalisationEntite' => 1,
'App%5CController%5CParametrageController' => 0,
'[C]App%5CController%5CParametrageController' => 1,
'App%5CController%5CParametrageController%23__construct' => 0,
'[C]App%5CController%5CParametrageController%23__construct' => 1,
'App%5CController%5CParametrageController%23addTypeAgent' => 17,
'[C]App%5CController%5CParametrageController%23addTypeAgent' => 1,
'App%5CController%5CParametrageController%23addTypeIncident' => 18,
'[C]App%5CController%5CParametrageController%23addTypeIncident' => 1,
'App%5CController%5CParametrageController%23getTypesAgents' => 19,
'[C]App%5CController%5CParametrageController%23getTypesAgents' => 1,
'App%5CController%5CParametrageController%23addTypeDemande' => 20,
'[C]App%5CController%5CParametrageController%23addTypeDemande' => 1,
'App%5CController%5CParametrageController%24manager' => 0,
'[C]App%5CController%5CParametrageController%24manager' => 1,
'App%5CController%5CParametrageController%24security' => 0,
'[C]App%5CController%5CParametrageController%24security' => 1,
'App%5CController%5CUserCommonController' => 0,
'[C]App%5CController%5CUserCommonController' => 1,
'App%5CController%5CUserCommonController%23getUserById' => 21,
'[C]App%5CController%5CUserCommonController%23getUserById' => 1,
'App%5CController%5CUserCommonController%23getUserInfos' => 22,
'[C]App%5CController%5CUserCommonController%23getUserInfos' => 1,
'App%5CController%5CUserCommonController%23getEntitesAdmin' => 23,
'[C]App%5CController%5CUserCommonController%23getEntitesAdmin' => 1,
'App%5CController%5CUserCommonController%23requestPassword' => 24,
'[C]App%5CController%5CUserCommonController%23requestPassword' => 1,
'App%5CController%5CUserCommonController%23enterCodeConfirmation' => 25,
'[C]App%5CController%5CUserCommonController%23enterCodeConfirmation' => 1,
'App%5CController%5CUserCommonController%23resetPassword' => 26,
'[C]App%5CController%5CUserCommonController%23resetPassword' => 1,
'App%5CEntity%5CAdmin' => 27,
'[C]App%5CEntity%5CAdmin' => 1,
'App%5CEntity%5CAdmin%23__construct' => 0,
'[C]App%5CEntity%5CAdmin%23__construct' => 1,
'App%5CEntity%5CAdmin%23getId' => 0,
'[C]App%5CEntity%5CAdmin%23getId' => 1,
'App%5CEntity%5CAdmin%23getUser' => 0,
'[C]App%5CEntity%5CAdmin%23getUser' => 1,
'App%5CEntity%5CAdmin%23setUser' => 0,
'[C]App%5CEntity%5CAdmin%23setUser' => 1,
'App%5CEntity%5CAdmin%23getMatricule' => 0,
'[C]App%5CEntity%5CAdmin%23getMatricule' => 1,
'App%5CEntity%5CAdmin%23setMatricule' => 0,
'[C]App%5CEntity%5CAdmin%23setMatricule' => 1,
'App%5CEntity%5CAdmin%23getNumeroCarteProf' => 0,
'[C]App%5CEntity%5CAdmin%23getNumeroCarteProf' => 1,
'App%5CEntity%5CAdmin%23setNumeroCarteProf' => 0,
'[C]App%5CEntity%5CAdmin%23setNumeroCarteProf' => 1,
'App%5CEntity%5CAdmin%23getEntites' => 0,
'[C]App%5CEntity%5CAdmin%23getEntites' => 1,
'App%5CEntity%5CAdmin%23addEntite' => 0,
'[C]App%5CEntity%5CAdmin%23addEntite' => 1,
'App%5CEntity%5CAdmin%23removeEntite' => 0,
'[C]App%5CEntity%5CAdmin%23removeEntite' => 1,
'App%5CEntity%5CAdmin%24id' => 28,
'[C]App%5CEntity%5CAdmin%24id' => 1,
'App%5CEntity%5CAdmin%24user' => 29,
'[C]App%5CEntity%5CAdmin%24user' => 1,
'App%5CEntity%5CAdmin%24matricule' => 30,
'[C]App%5CEntity%5CAdmin%24matricule' => 1,
'App%5CEntity%5CAdmin%24numeroCarteProf' => 30,
'[C]App%5CEntity%5CAdmin%24numeroCarteProf' => 1,
'App%5CEntity%5CAdmin%24entites' => 31,
'[C]App%5CEntity%5CAdmin%24entites' => 1,
'App%5CEntity%5CAgent' => 32,
'[C]App%5CEntity%5CAgent' => 1,
'App%5CEntity%5CAgent%23__construct' => 0,
'[C]App%5CEntity%5CAgent%23__construct' => 1,
'App%5CEntity%5CAgent%23getId' => 0,
'[C]App%5CEntity%5CAgent%23getId' => 1,
'App%5CEntity%5CAgent%23getUser' => 0,
'[C]App%5CEntity%5CAgent%23getUser' => 1,
'App%5CEntity%5CAgent%23setUser' => 0,
'[C]App%5CEntity%5CAgent%23setUser' => 1,
'App%5CEntity%5CAgent%23getType' => 0,
'[C]App%5CEntity%5CAgent%23getType' => 1,
'App%5CEntity%5CAgent%23addType' => 0,
'[C]App%5CEntity%5CAgent%23addType' => 1,
'App%5CEntity%5CAgent%23removeType' => 0,
'[C]App%5CEntity%5CAgent%23removeType' => 1,
'App%5CEntity%5CAgent%23getEntrepriseSecurite' => 0,
'[C]App%5CEntity%5CAgent%23getEntrepriseSecurite' => 1,
'App%5CEntity%5CAgent%23setEntrepriseSecurite' => 0,
'[C]App%5CEntity%5CAgent%23setEntrepriseSecurite' => 1,
'App%5CEntity%5CAgent%23getMatricule' => 0,
'[C]App%5CEntity%5CAgent%23getMatricule' => 1,
'App%5CEntity%5CAgent%23setMatricule' => 0,
'[C]App%5CEntity%5CAgent%23setMatricule' => 1,
'App%5CEntity%5CAgent%23getNumeroCarteProf' => 0,
'[C]App%5CEntity%5CAgent%23getNumeroCarteProf' => 1,
'App%5CEntity%5CAgent%23setNumeroCarteProf' => 0,
'[C]App%5CEntity%5CAgent%23setNumeroCarteProf' => 1,
'App%5CEntity%5CAgent%24id' => 33,
'[C]App%5CEntity%5CAgent%24id' => 1,
'App%5CEntity%5CAgent%24user' => 34,
'[C]App%5CEntity%5CAgent%24user' => 1,
'App%5CEntity%5CAgent%24type' => 35,
'[C]App%5CEntity%5CAgent%24type' => 1,
'App%5CEntity%5CAgent%24entrepriseSecurite' => 36,
'[C]App%5CEntity%5CAgent%24entrepriseSecurite' => 1,
'App%5CEntity%5CAgent%24matricule' => 37,
'[C]App%5CEntity%5CAgent%24matricule' => 1,
'App%5CEntity%5CAgent%24numeroCarteProf' => 37,
'[C]App%5CEntity%5CAgent%24numeroCarteProf' => 1,
'App%5CEntity%5CBatiment' => 38,
'[C]App%5CEntity%5CBatiment' => 1,
'App%5CEntity%5CBatiment%23__construct' => 0,
'[C]App%5CEntity%5CBatiment%23__construct' => 1,
'App%5CEntity%5CBatiment%23getId' => 0,
'[C]App%5CEntity%5CBatiment%23getId' => 1,
'App%5CEntity%5CBatiment%23getTitre' => 0,
'[C]App%5CEntity%5CBatiment%23getTitre' => 1,
'App%5CEntity%5CBatiment%23setTitre' => 0,
'[C]App%5CEntity%5CBatiment%23setTitre' => 1,
'App%5CEntity%5CBatiment%23getDescription' => 0,
'[C]App%5CEntity%5CBatiment%23getDescription' => 1,
'App%5CEntity%5CBatiment%23setDescription' => 0,
'[C]App%5CEntity%5CBatiment%23setDescription' => 1,
'App%5CEntity%5CBatiment%23getContact' => 0,
'[C]App%5CEntity%5CBatiment%23getContact' => 1,
'App%5CEntity%5CBatiment%23setContact' => 0,
'[C]App%5CEntity%5CBatiment%23setContact' => 1,
'App%5CEntity%5CBatiment%23getLocalisation' => 0,
'[C]App%5CEntity%5CBatiment%23getLocalisation' => 1,
'App%5CEntity%5CBatiment%23setLocalisation' => 0,
'[C]App%5CEntity%5CBatiment%23setLocalisation' => 1,
'App%5CEntity%5CBatiment%23getEntite' => 0,
'[C]App%5CEntity%5CBatiment%23getEntite' => 1,
'App%5CEntity%5CBatiment%23setEntite' => 0,
'[C]App%5CEntity%5CBatiment%23setEntite' => 1,
'App%5CEntity%5CBatiment%23getNumeroParcelle' => 0,
'[C]App%5CEntity%5CBatiment%23getNumeroParcelle' => 1,
'App%5CEntity%5CBatiment%23setNumeroParcelle' => 0,
'[C]App%5CEntity%5CBatiment%23setNumeroParcelle' => 1,
'App%5CEntity%5CBatiment%23getTypeBatiment' => 0,
'[C]App%5CEntity%5CBatiment%23getTypeBatiment' => 1,
'App%5CEntity%5CBatiment%23setTypeBatiment' => 0,
'[C]App%5CEntity%5CBatiment%23setTypeBatiment' => 1,
'App%5CEntity%5CBatiment%23getTitreFoncier' => 0,
'[C]App%5CEntity%5CBatiment%23getTitreFoncier' => 1,
'App%5CEntity%5CBatiment%23setTitreFoncier' => 0,
'[C]App%5CEntity%5CBatiment%23setTitreFoncier' => 1,
'App%5CEntity%5CBatiment%23getDateConstruction' => 0,
'[C]App%5CEntity%5CBatiment%23getDateConstruction' => 1,
'App%5CEntity%5CBatiment%23setDateConstruction' => 0,
'[C]App%5CEntity%5CBatiment%23setDateConstruction' => 1,
'App%5CEntity%5CBatiment%23getBatimentOwners' => 0,
'[C]App%5CEntity%5CBatiment%23getBatimentOwners' => 1,
'App%5CEntity%5CBatiment%23addBatimentOwner' => 0,
'[C]App%5CEntity%5CBatiment%23addBatimentOwner' => 1,
'App%5CEntity%5CBatiment%23removeBatimentOwner' => 0,
'[C]App%5CEntity%5CBatiment%23removeBatimentOwner' => 1,
'App%5CEntity%5CBatiment%24id' => 39,
'[C]App%5CEntity%5CBatiment%24id' => 1,
'App%5CEntity%5CBatiment%24titre' => 40,
'[C]App%5CEntity%5CBatiment%24titre' => 1,
'App%5CEntity%5CBatiment%24description' => 41,
'[C]App%5CEntity%5CBatiment%24description' => 1,
'App%5CEntity%5CBatiment%24contact' => 42,
'[C]App%5CEntity%5CBatiment%24contact' => 1,
'App%5CEntity%5CBatiment%24localisation' => 43,
'[C]App%5CEntity%5CBatiment%24localisation' => 1,
'App%5CEntity%5CBatiment%24entite' => 44,
'[C]App%5CEntity%5CBatiment%24entite' => 1,
'App%5CEntity%5CBatiment%24numeroParcelle' => 40,
'[C]App%5CEntity%5CBatiment%24numeroParcelle' => 1,
'App%5CEntity%5CBatiment%24typeBatiment' => 45,
'[C]App%5CEntity%5CBatiment%24typeBatiment' => 1,
'App%5CEntity%5CBatiment%24titreFoncier' => 40,
'[C]App%5CEntity%5CBatiment%24titreFoncier' => 1,
'App%5CEntity%5CBatiment%24dateConstruction' => 46,
'[C]App%5CEntity%5CBatiment%24dateConstruction' => 1,
'App%5CEntity%5CBatiment%24batimentOwners' => 47,
'[C]App%5CEntity%5CBatiment%24batimentOwners' => 1,
'App%5CEntity%5CBatimentOwner' => 48,
'[C]App%5CEntity%5CBatimentOwner' => 1,
'App%5CEntity%5CBatimentOwner%23__construct' => 0,
'[C]App%5CEntity%5CBatimentOwner%23__construct' => 1,
'App%5CEntity%5CBatimentOwner%23getId' => 0,
'[C]App%5CEntity%5CBatimentOwner%23getId' => 1,
'App%5CEntity%5CBatimentOwner%23getProprietaires' => 0,
'[C]App%5CEntity%5CBatimentOwner%23getProprietaires' => 1,
'App%5CEntity%5CBatimentOwner%23addProprietaire' => 0,
'[C]App%5CEntity%5CBatimentOwner%23addProprietaire' => 1,
'App%5CEntity%5CBatimentOwner%23removeProprietaire' => 0,
'[C]App%5CEntity%5CBatimentOwner%23removeProprietaire' => 1,
'App%5CEntity%5CBatimentOwner%23getDateCreation' => 0,
'[C]App%5CEntity%5CBatimentOwner%23getDateCreation' => 1,
'App%5CEntity%5CBatimentOwner%23setDateCreation' => 0,
'[C]App%5CEntity%5CBatimentOwner%23setDateCreation' => 1,
'App%5CEntity%5CBatimentOwner%23getDateAchat' => 0,
'[C]App%5CEntity%5CBatimentOwner%23getDateAchat' => 1,
'App%5CEntity%5CBatimentOwner%23setDateAchat' => 0,
'[C]App%5CEntity%5CBatimentOwner%23setDateAchat' => 1,
'App%5CEntity%5CBatimentOwner%23getDateVente' => 0,
'[C]App%5CEntity%5CBatimentOwner%23getDateVente' => 1,
'App%5CEntity%5CBatimentOwner%23setDateVente' => 0,
'[C]App%5CEntity%5CBatimentOwner%23setDateVente' => 1,
'App%5CEntity%5CBatimentOwner%23getActive' => 0,
'[C]App%5CEntity%5CBatimentOwner%23getActive' => 1,
'App%5CEntity%5CBatimentOwner%23setActive' => 0,
'[C]App%5CEntity%5CBatimentOwner%23setActive' => 1,
'App%5CEntity%5CBatimentOwner%23getBatiment' => 0,
'[C]App%5CEntity%5CBatimentOwner%23getBatiment' => 1,
'App%5CEntity%5CBatimentOwner%23setBatiment' => 0,
'[C]App%5CEntity%5CBatimentOwner%23setBatiment' => 1,
'App%5CEntity%5CBatimentOwner%24id' => 49,
'[C]App%5CEntity%5CBatimentOwner%24id' => 1,
'App%5CEntity%5CBatimentOwner%24proprietaires' => 50,
'[C]App%5CEntity%5CBatimentOwner%24proprietaires' => 1,
'App%5CEntity%5CBatimentOwner%24dateCreation' => 51,
'[C]App%5CEntity%5CBatimentOwner%24dateCreation' => 1,
'App%5CEntity%5CBatimentOwner%24dateAchat' => 52,
'[C]App%5CEntity%5CBatimentOwner%24dateAchat' => 1,
'App%5CEntity%5CBatimentOwner%24dateVente' => 52,
'[C]App%5CEntity%5CBatimentOwner%24dateVente' => 1,
'App%5CEntity%5CBatimentOwner%24active' => 53,
'[C]App%5CEntity%5CBatimentOwner%24active' => 1,
'App%5CEntity%5CBatimentOwner%24batiment' => 54,
'[C]App%5CEntity%5CBatimentOwner%24batiment' => 1,
'App%5CEntity%5CContact' => 55,
'[C]App%5CEntity%5CContact' => 1,
'App%5CEntity%5CContact%23getId' => 0,
'[C]App%5CEntity%5CContact%23getId' => 1,
'App%5CEntity%5CContact%23getLatitude' => 0,
'[C]App%5CEntity%5CContact%23getLatitude' => 1,
'App%5CEntity%5CContact%23setLatitude' => 0,
'[C]App%5CEntity%5CContact%23setLatitude' => 1,
'App%5CEntity%5CContact%23getLongitude' => 0,
'[C]App%5CEntity%5CContact%23getLongitude' => 1,
'App%5CEntity%5CContact%23setLongitude' => 0,
'[C]App%5CEntity%5CContact%23setLongitude' => 1,
'App%5CEntity%5CContact%23getEmail' => 0,
'[C]App%5CEntity%5CContact%23getEmail' => 1,
'App%5CEntity%5CContact%23setEmail' => 0,
'[C]App%5CEntity%5CContact%23setEmail' => 1,
'App%5CEntity%5CContact%23getTelephone' => 0,
'[C]App%5CEntity%5CContact%23getTelephone' => 1,
'App%5CEntity%5CContact%23setTelephone' => 0,
'[C]App%5CEntity%5CContact%23setTelephone' => 1,
'App%5CEntity%5CContact%23getVille' => 0,
'[C]App%5CEntity%5CContact%23getVille' => 1,
'App%5CEntity%5CContact%23setVille' => 0,
'[C]App%5CEntity%5CContact%23setVille' => 1,
'App%5CEntity%5CContact%23getBatiment' => 0,
'[C]App%5CEntity%5CContact%23getBatiment' => 1,
'App%5CEntity%5CContact%23setBatiment' => 0,
'[C]App%5CEntity%5CContact%23setBatiment' => 1,
'App%5CEntity%5CContact%24id' => 56,
'[C]App%5CEntity%5CContact%24id' => 1,
'App%5CEntity%5CContact%24latitude' => 57,
'[C]App%5CEntity%5CContact%24latitude' => 1,
'App%5CEntity%5CContact%24longitude' => 57,
'[C]App%5CEntity%5CContact%24longitude' => 1,
'App%5CEntity%5CContact%24email' => 58,
'[C]App%5CEntity%5CContact%24email' => 1,
'App%5CEntity%5CContact%24telephone' => 59,
'[C]App%5CEntity%5CContact%24telephone' => 1,
'App%5CEntity%5CContact%24ville' => 60,
'[C]App%5CEntity%5CContact%24ville' => 1,
'App%5CEntity%5CContact%24batiment' => 61,
'[C]App%5CEntity%5CContact%24batiment' => 1,
'App%5CEntity%5CEntite' => 62,
'[C]App%5CEntity%5CEntite' => 1,
'App%5CEntity%5CEntite%23__construct' => 0,
'[C]App%5CEntity%5CEntite%23__construct' => 1,
'App%5CEntity%5CEntite%23getId' => 0,
'[C]App%5CEntity%5CEntite%23getId' => 1,
'App%5CEntity%5CEntite%23getNom' => 0,
'[C]App%5CEntity%5CEntite%23getNom' => 1,
'App%5CEntity%5CEntite%23setNom' => 0,
'[C]App%5CEntity%5CEntite%23setNom' => 1,
'App%5CEntity%5CEntite%23getDescription' => 0,
'[C]App%5CEntity%5CEntite%23getDescription' => 1,
'App%5CEntity%5CEntite%23setDescription' => 0,
'[C]App%5CEntity%5CEntite%23setDescription' => 1,
'App%5CEntity%5CEntite%23getContact' => 0,
'[C]App%5CEntity%5CEntite%23getContact' => 1,
'App%5CEntity%5CEntite%23setContact' => 0,
'[C]App%5CEntity%5CEntite%23setContact' => 1,
'App%5CEntity%5CEntite%23getIsBloked' => 0,
'[C]App%5CEntity%5CEntite%23getIsBloked' => 1,
'App%5CEntity%5CEntite%23setIsBloked' => 0,
'[C]App%5CEntity%5CEntite%23setIsBloked' => 1,
'App%5CEntity%5CEntite%23getAgents' => 0,
'[C]App%5CEntity%5CEntite%23getAgents' => 1,
'App%5CEntity%5CEntite%23addAgent' => 0,
'[C]App%5CEntity%5CEntite%23addAgent' => 1,
'App%5CEntity%5CEntite%23removeAgent' => 0,
'[C]App%5CEntity%5CEntite%23removeAgent' => 1,
'App%5CEntity%5CEntite%23getParamTypesDemandes' => 0,
'[C]App%5CEntity%5CEntite%23getParamTypesDemandes' => 1,
'App%5CEntity%5CEntite%23addParamTypesDemande' => 0,
'[C]App%5CEntity%5CEntite%23addParamTypesDemande' => 1,
'App%5CEntity%5CEntite%23removeParamTypesDemande' => 0,
'[C]App%5CEntity%5CEntite%23removeParamTypesDemande' => 1,
'App%5CEntity%5CEntite%23getCreatedAt' => 0,
'[C]App%5CEntity%5CEntite%23getCreatedAt' => 1,
'App%5CEntity%5CEntite%23setCreatedAt' => 0,
'[C]App%5CEntity%5CEntite%23setCreatedAt' => 1,
'App%5CEntity%5CEntite%23getIncidents' => 0,
'[C]App%5CEntity%5CEntite%23getIncidents' => 1,
'App%5CEntity%5CEntite%23addIncident' => 0,
'[C]App%5CEntity%5CEntite%23addIncident' => 1,
'App%5CEntity%5CEntite%23removeIncident' => 0,
'[C]App%5CEntity%5CEntite%23removeIncident' => 1,
'App%5CEntity%5CEntite%23getTypeEntite' => 0,
'[C]App%5CEntity%5CEntite%23getTypeEntite' => 1,
'App%5CEntity%5CEntite%23setTypeEntite' => 0,
'[C]App%5CEntity%5CEntite%23setTypeEntite' => 1,
'App%5CEntity%5CEntite%23getAdmins' => 0,
'[C]App%5CEntity%5CEntite%23getAdmins' => 1,
'App%5CEntity%5CEntite%23addAdmin' => 0,
'[C]App%5CEntity%5CEntite%23addAdmin' => 1,
'App%5CEntity%5CEntite%23removeAdmin' => 0,
'[C]App%5CEntity%5CEntite%23removeAdmin' => 1,
'App%5CEntity%5CEntite%23getGestionnaires' => 0,
'[C]App%5CEntity%5CEntite%23getGestionnaires' => 1,
'App%5CEntity%5CEntite%23addGestionnaire' => 0,
'[C]App%5CEntity%5CEntite%23addGestionnaire' => 1,
'App%5CEntity%5CEntite%23removeGestionnaire' => 0,
'[C]App%5CEntity%5CEntite%23removeGestionnaire' => 1,
'App%5CEntity%5CEntite%23getIsEntreprise' => 0,
'[C]App%5CEntity%5CEntite%23getIsEntreprise' => 1,
'App%5CEntity%5CEntite%23setIsEntreprise' => 0,
'[C]App%5CEntity%5CEntite%23setIsEntreprise' => 1,
'App%5CEntity%5CEntite%23getFather' => 0,
'[C]App%5CEntity%5CEntite%23getFather' => 1,
'App%5CEntity%5CEntite%23setFather' => 0,
'[C]App%5CEntity%5CEntite%23setFather' => 1,
'App%5CEntity%5CEntite%23getBatiments' => 0,
'[C]App%5CEntity%5CEntite%23getBatiments' => 1,
'App%5CEntity%5CEntite%23addBatiment' => 0,
'[C]App%5CEntity%5CEntite%23addBatiment' => 1,
'App%5CEntity%5CEntite%23removeBatiment' => 0,
'[C]App%5CEntity%5CEntite%23removeBatiment' => 1,
'App%5CEntity%5CEntite%23getProprietaire' => 0,
'[C]App%5CEntity%5CEntite%23getProprietaire' => 1,
'App%5CEntity%5CEntite%23setProprietaire' => 0,
'[C]App%5CEntity%5CEntite%23setProprietaire' => 1,
'App%5CEntity%5CEntite%23getType' => 0,
'[C]App%5CEntity%5CEntite%23getType' => 1,
'App%5CEntity%5CEntite%23setType' => 0,
'[C]App%5CEntity%5CEntite%23setType' => 1,
'App%5CEntity%5CEntite%24id' => 63,
'[C]App%5CEntity%5CEntite%24id' => 1,
'App%5CEntity%5CEntite%24nom' => 64,
'[C]App%5CEntity%5CEntite%24nom' => 1,
'App%5CEntity%5CEntite%24description' => 65,
'[C]App%5CEntity%5CEntite%24description' => 1,
'App%5CEntity%5CEntite%24contact' => 66,
'[C]App%5CEntity%5CEntite%24contact' => 1,
'App%5CEntity%5CEntite%24isBloked' => 67,
'[C]App%5CEntity%5CEntite%24isBloked' => 1,
'App%5CEntity%5CEntite%24agents' => 68,
'[C]App%5CEntity%5CEntite%24agents' => 1,
'App%5CEntity%5CEntite%24paramTypesDemandes' => 69,
'[C]App%5CEntity%5CEntite%24paramTypesDemandes' => 1,
'App%5CEntity%5CEntite%24createdAt' => 70,
'[C]App%5CEntity%5CEntite%24createdAt' => 1,
'App%5CEntity%5CEntite%24incidents' => 71,
'[C]App%5CEntity%5CEntite%24incidents' => 1,
'App%5CEntity%5CEntite%24typeEntite' => 72,
'[C]App%5CEntity%5CEntite%24typeEntite' => 1,
'App%5CEntity%5CEntite%24admins' => 73,
'[C]App%5CEntity%5CEntite%24admins' => 1,
'App%5CEntity%5CEntite%24gestionnaires' => 74,
'[C]App%5CEntity%5CEntite%24gestionnaires' => 1,
'App%5CEntity%5CEntite%24isEntreprise' => 75,
'[C]App%5CEntity%5CEntite%24isEntreprise' => 1,
'App%5CEntity%5CEntite%24father' => 76,
'[C]App%5CEntity%5CEntite%24father' => 1,
'App%5CEntity%5CEntite%24batiments' => 77,
'[C]App%5CEntity%5CEntite%24batiments' => 1,
'App%5CEntity%5CEntite%24proprietaire' => 78,
'[C]App%5CEntity%5CEntite%24proprietaire' => 1,
'App%5CEntity%5CEntite%24type' => 79,
'[C]App%5CEntity%5CEntite%24type' => 1,
'App%5CEntity%5CGestionnaire' => 80,
'[C]App%5CEntity%5CGestionnaire' => 1,
'App%5CEntity%5CGestionnaire%23__construct' => 0,
'[C]App%5CEntity%5CGestionnaire%23__construct' => 1,
'App%5CEntity%5CGestionnaire%23getId' => 0,
'[C]App%5CEntity%5CGestionnaire%23getId' => 1,
'App%5CEntity%5CGestionnaire%23getUser' => 0,
'[C]App%5CEntity%5CGestionnaire%23getUser' => 1,
'App%5CEntity%5CGestionnaire%23setUser' => 0,
'[C]App%5CEntity%5CGestionnaire%23setUser' => 1,
'App%5CEntity%5CGestionnaire%23getTypeGestionnaire' => 0,
'[C]App%5CEntity%5CGestionnaire%23getTypeGestionnaire' => 1,
'App%5CEntity%5CGestionnaire%23setTypeGestionnaire' => 0,
'[C]App%5CEntity%5CGestionnaire%23setTypeGestionnaire' => 1,
'App%5CEntity%5CGestionnaire%23getMatricule' => 0,
'[C]App%5CEntity%5CGestionnaire%23getMatricule' => 1,
'App%5CEntity%5CGestionnaire%23setMatricule' => 0,
'[C]App%5CEntity%5CGestionnaire%23setMatricule' => 1,
'App%5CEntity%5CGestionnaire%23getNumeroCarteProf' => 0,
'[C]App%5CEntity%5CGestionnaire%23getNumeroCarteProf' => 1,
'App%5CEntity%5CGestionnaire%23setNumeroCarteProf' => 0,
'[C]App%5CEntity%5CGestionnaire%23setNumeroCarteProf' => 1,
'App%5CEntity%5CGestionnaire%23getEntites' => 0,
'[C]App%5CEntity%5CGestionnaire%23getEntites' => 1,
'App%5CEntity%5CGestionnaire%23addEntite' => 0,
'[C]App%5CEntity%5CGestionnaire%23addEntite' => 1,
'App%5CEntity%5CGestionnaire%23removeEntite' => 0,
'[C]App%5CEntity%5CGestionnaire%23removeEntite' => 1,
'App%5CEntity%5CGestionnaire%24id' => 81,
'[C]App%5CEntity%5CGestionnaire%24id' => 1,
'App%5CEntity%5CGestionnaire%24user' => 82,
'[C]App%5CEntity%5CGestionnaire%24user' => 1,
'App%5CEntity%5CGestionnaire%24typeGestionnaire' => 83,
'[C]App%5CEntity%5CGestionnaire%24typeGestionnaire' => 1,
'App%5CEntity%5CGestionnaire%24matricule' => 84,
'[C]App%5CEntity%5CGestionnaire%24matricule' => 1,
'App%5CEntity%5CGestionnaire%24numeroCarteProf' => 84,
'[C]App%5CEntity%5CGestionnaire%24numeroCarteProf' => 1,
'App%5CEntity%5CGestionnaire%24entites' => 85,
'[C]App%5CEntity%5CGestionnaire%24entites' => 1,
'App%5CEntity%5CIncident' => 86,
'[C]App%5CEntity%5CIncident' => 1,
'App%5CEntity%5CIncident%23getId' => 0,
'[C]App%5CEntity%5CIncident%23getId' => 1,
'App%5CEntity%5CIncident%23getDateIncident' => 0,
'[C]App%5CEntity%5CIncident%23getDateIncident' => 1,
'App%5CEntity%5CIncident%23setDateIncident' => 0,
'[C]App%5CEntity%5CIncident%23setDateIncident' => 1,
'App%5CEntity%5CIncident%23getCommentaire' => 0,
'[C]App%5CEntity%5CIncident%23getCommentaire' => 1,
'App%5CEntity%5CIncident%23setCommentaire' => 0,
'[C]App%5CEntity%5CIncident%23setCommentaire' => 1,
'App%5CEntity%5CIncident%23getEtatIncident' => 0,
'[C]App%5CEntity%5CIncident%23getEtatIncident' => 1,
'App%5CEntity%5CIncident%23setEtatIncident' => 0,
'[C]App%5CEntity%5CIncident%23setEtatIncident' => 1,
'App%5CEntity%5CIncident%23getEntite' => 0,
'[C]App%5CEntity%5CIncident%23getEntite' => 1,
'App%5CEntity%5CIncident%23setEntite' => 0,
'[C]App%5CEntity%5CIncident%23setEntite' => 1,
'App%5CEntity%5CIncident%23getTypeIncident' => 0,
'[C]App%5CEntity%5CIncident%23getTypeIncident' => 1,
'App%5CEntity%5CIncident%23setTypeIncident' => 0,
'[C]App%5CEntity%5CIncident%23setTypeIncident' => 1,
'App%5CEntity%5CIncident%24id' => 33,
'[C]App%5CEntity%5CIncident%24id' => 1,
'App%5CEntity%5CIncident%24dateIncident' => 87,
'[C]App%5CEntity%5CIncident%24dateIncident' => 1,
'App%5CEntity%5CIncident%24commentaire' => 88,
'[C]App%5CEntity%5CIncident%24commentaire' => 1,
'App%5CEntity%5CIncident%24etatIncident' => 88,
'[C]App%5CEntity%5CIncident%24etatIncident' => 1,
'App%5CEntity%5CIncident%24entite' => 89,
'[C]App%5CEntity%5CIncident%24entite' => 1,
'App%5CEntity%5CIncident%24typeIncident' => 90,
'[C]App%5CEntity%5CIncident%24typeIncident' => 1,
'App%5CEntity%5CLocalisation' => 91,
'[C]App%5CEntity%5CLocalisation' => 1,
'App%5CEntity%5CLocalisation%23__construct' => 0,
'[C]App%5CEntity%5CLocalisation%23__construct' => 1,
'App%5CEntity%5CLocalisation%23getId' => 0,
'[C]App%5CEntity%5CLocalisation%23getId' => 1,
'App%5CEntity%5CLocalisation%23getNom' => 0,
'[C]App%5CEntity%5CLocalisation%23getNom' => 1,
'App%5CEntity%5CLocalisation%23setNom' => 0,
'[C]App%5CEntity%5CLocalisation%23setNom' => 1,
'App%5CEntity%5CLocalisation%23getTypeLocalisation' => 0,
'[C]App%5CEntity%5CLocalisation%23getTypeLocalisation' => 1,
'App%5CEntity%5CLocalisation%23setTypeLocalisation' => 0,
'[C]App%5CEntity%5CLocalisation%23setTypeLocalisation' => 1,
'App%5CEntity%5CLocalisation%23getNiveau' => 0,
'[C]App%5CEntity%5CLocalisation%23getNiveau' => 1,
'App%5CEntity%5CLocalisation%23setNiveau' => 0,
'[C]App%5CEntity%5CLocalisation%23setNiveau' => 1,
'App%5CEntity%5CLocalisation%23getFather' => 0,
'[C]App%5CEntity%5CLocalisation%23getFather' => 1,
'App%5CEntity%5CLocalisation%23setFather' => 0,
'[C]App%5CEntity%5CLocalisation%23setFather' => 1,
'App%5CEntity%5CLocalisation%23getZipCode' => 0,
'[C]App%5CEntity%5CLocalisation%23getZipCode' => 1,
'App%5CEntity%5CLocalisation%23setZipCode' => 0,
'[C]App%5CEntity%5CLocalisation%23setZipCode' => 1,
'App%5CEntity%5CLocalisation%23getBatiments' => 0,
'[C]App%5CEntity%5CLocalisation%23getBatiments' => 1,
'App%5CEntity%5CLocalisation%23addBatiment' => 0,
'[C]App%5CEntity%5CLocalisation%23addBatiment' => 1,
'App%5CEntity%5CLocalisation%23removeBatiment' => 0,
'[C]App%5CEntity%5CLocalisation%23removeBatiment' => 1,
'App%5CEntity%5CLocalisation%24id' => 92,
'[C]App%5CEntity%5CLocalisation%24id' => 1,
'App%5CEntity%5CLocalisation%24nom' => 93,
'[C]App%5CEntity%5CLocalisation%24nom' => 1,
'App%5CEntity%5CLocalisation%24typeLocalisation' => 94,
'[C]App%5CEntity%5CLocalisation%24typeLocalisation' => 1,
'App%5CEntity%5CLocalisation%24niveau' => 95,
'[C]App%5CEntity%5CLocalisation%24niveau' => 1,
'App%5CEntity%5CLocalisation%24father' => 96,
'[C]App%5CEntity%5CLocalisation%24father' => 1,
'App%5CEntity%5CLocalisation%24zipCode' => 97,
'[C]App%5CEntity%5CLocalisation%24zipCode' => 1,
'App%5CEntity%5CLocalisation%24batiments' => 98,
'[C]App%5CEntity%5CLocalisation%24batiments' => 1,
'App%5CEntity%5CParamTypesAgents' => 99,
'[C]App%5CEntity%5CParamTypesAgents' => 1,
'App%5CEntity%5CParamTypesAgents%23getId' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23getId' => 1,
'App%5CEntity%5CParamTypesAgents%23getTitre' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23getTitre' => 1,
'App%5CEntity%5CParamTypesAgents%23setTitre' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23setTitre' => 1,
'App%5CEntity%5CParamTypesAgents%23getDescription' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23getDescription' => 1,
'App%5CEntity%5CParamTypesAgents%23setDescription' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23setDescription' => 1,
'App%5CEntity%5CParamTypesAgents%23getArchived' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23getArchived' => 1,
'App%5CEntity%5CParamTypesAgents%23setArchived' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23setArchived' => 1,
'App%5CEntity%5CParamTypesAgents%23getEntite' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23getEntite' => 1,
'App%5CEntity%5CParamTypesAgents%23setEntite' => 0,
'[C]App%5CEntity%5CParamTypesAgents%23setEntite' => 1,
'App%5CEntity%5CParamTypesAgents%24id' => 33,
'[C]App%5CEntity%5CParamTypesAgents%24id' => 1,
'App%5CEntity%5CParamTypesAgents%24titre' => 88,
'[C]App%5CEntity%5CParamTypesAgents%24titre' => 1,
'App%5CEntity%5CParamTypesAgents%24description' => 100,
'[C]App%5CEntity%5CParamTypesAgents%24description' => 1,
'App%5CEntity%5CParamTypesAgents%24archived' => 101,
'[C]App%5CEntity%5CParamTypesAgents%24archived' => 1,
'App%5CEntity%5CParamTypesAgents%24entite' => 102,
'[C]App%5CEntity%5CParamTypesAgents%24entite' => 1,
'App%5CEntity%5CParamTypesDemandes' => 103,
'[C]App%5CEntity%5CParamTypesDemandes' => 1,
'App%5CEntity%5CParamTypesDemandes%23getId' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23getId' => 1,
'App%5CEntity%5CParamTypesDemandes%23getTitre' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23getTitre' => 1,
'App%5CEntity%5CParamTypesDemandes%23setTitre' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23setTitre' => 1,
'App%5CEntity%5CParamTypesDemandes%23getDescription' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23getDescription' => 1,
'App%5CEntity%5CParamTypesDemandes%23setDescription' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23setDescription' => 1,
'App%5CEntity%5CParamTypesDemandes%23getEntite' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23getEntite' => 1,
'App%5CEntity%5CParamTypesDemandes%23setEntite' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23setEntite' => 1,
'App%5CEntity%5CParamTypesDemandes%23getArchived' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23getArchived' => 1,
'App%5CEntity%5CParamTypesDemandes%23setArchived' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23setArchived' => 1,
'App%5CEntity%5CParamTypesDemandes%23getType' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23getType' => 1,
'App%5CEntity%5CParamTypesDemandes%23setType' => 0,
'[C]App%5CEntity%5CParamTypesDemandes%23setType' => 1,
'App%5CEntity%5CParamTypesDemandes%24id' => 33,
'[C]App%5CEntity%5CParamTypesDemandes%24id' => 1,
'App%5CEntity%5CParamTypesDemandes%24titre' => 88,
'[C]App%5CEntity%5CParamTypesDemandes%24titre' => 1,
'App%5CEntity%5CParamTypesDemandes%24description' => 100,
'[C]App%5CEntity%5CParamTypesDemandes%24description' => 1,
'App%5CEntity%5CParamTypesDemandes%24entite' => 104,
'[C]App%5CEntity%5CParamTypesDemandes%24entite' => 1,
'App%5CEntity%5CParamTypesDemandes%24archived' => 101,
'[C]App%5CEntity%5CParamTypesDemandes%24archived' => 1,
'App%5CEntity%5CParamTypesDemandes%24type' => 105,
'[C]App%5CEntity%5CParamTypesDemandes%24type' => 1,
'App%5CEntity%5CProprietaire' => 106,
'[C]App%5CEntity%5CProprietaire' => 1,
'App%5CEntity%5CProprietaire%23__construct' => 0,
'[C]App%5CEntity%5CProprietaire%23__construct' => 1,
'App%5CEntity%5CProprietaire%23getId' => 0,
'[C]App%5CEntity%5CProprietaire%23getId' => 1,
'App%5CEntity%5CProprietaire%23getUser' => 0,
'[C]App%5CEntity%5CProprietaire%23getUser' => 1,
'App%5CEntity%5CProprietaire%23setUser' => 0,
'[C]App%5CEntity%5CProprietaire%23setUser' => 1,
'App%5CEntity%5CProprietaire%23getEntite' => 0,
'[C]App%5CEntity%5CProprietaire%23getEntite' => 1,
'App%5CEntity%5CProprietaire%23setEntite' => 0,
'[C]App%5CEntity%5CProprietaire%23setEntite' => 1,
'App%5CEntity%5CProprietaire%23getBatimentOwner' => 0,
'[C]App%5CEntity%5CProprietaire%23getBatimentOwner' => 1,
'App%5CEntity%5CProprietaire%23setBatimentOwner' => 0,
'[C]App%5CEntity%5CProprietaire%23setBatimentOwner' => 1,
'App%5CEntity%5CProprietaire%24id' => 107,
'[C]App%5CEntity%5CProprietaire%24id' => 1,
'App%5CEntity%5CProprietaire%24user' => 108,
'[C]App%5CEntity%5CProprietaire%24user' => 1,
'App%5CEntity%5CProprietaire%24entite' => 109,
'[C]App%5CEntity%5CProprietaire%24entite' => 1,
'App%5CEntity%5CProprietaire%24batimentOwner' => 110,
'[C]App%5CEntity%5CProprietaire%24batimentOwner' => 1,
'App%5CEntity%5CSuperAdmin' => 111,
'[C]App%5CEntity%5CSuperAdmin' => 1,
'App%5CEntity%5CSuperAdmin%23getId' => 0,
'[C]App%5CEntity%5CSuperAdmin%23getId' => 1,
'App%5CEntity%5CSuperAdmin%23getUser' => 0,
'[C]App%5CEntity%5CSuperAdmin%23getUser' => 1,
'App%5CEntity%5CSuperAdmin%23setUser' => 0,
'[C]App%5CEntity%5CSuperAdmin%23setUser' => 1,
'App%5CEntity%5CSuperAdmin%24id' => 112,
'[C]App%5CEntity%5CSuperAdmin%24id' => 1,
'App%5CEntity%5CSuperAdmin%24user' => 113,
'[C]App%5CEntity%5CSuperAdmin%24user' => 1,
'App%5CEntity%5CTypeAgent' => 114,
'[C]App%5CEntity%5CTypeAgent' => 1,
'App%5CEntity%5CTypeAgent%23__construct' => 0,
'[C]App%5CEntity%5CTypeAgent%23__construct' => 1,
'App%5CEntity%5CTypeAgent%23getId' => 0,
'[C]App%5CEntity%5CTypeAgent%23getId' => 1,
'App%5CEntity%5CTypeAgent%23getLibelle' => 0,
'[C]App%5CEntity%5CTypeAgent%23getLibelle' => 1,
'App%5CEntity%5CTypeAgent%23setLibelle' => 0,
'[C]App%5CEntity%5CTypeAgent%23setLibelle' => 1,
'App%5CEntity%5CTypeAgent%23getArchived' => 0,
'[C]App%5CEntity%5CTypeAgent%23getArchived' => 1,
'App%5CEntity%5CTypeAgent%23setArchived' => 0,
'[C]App%5CEntity%5CTypeAgent%23setArchived' => 1,
'App%5CEntity%5CTypeAgent%23getAgents' => 0,
'[C]App%5CEntity%5CTypeAgent%23getAgents' => 1,
'App%5CEntity%5CTypeAgent%23addAgent' => 0,
'[C]App%5CEntity%5CTypeAgent%23addAgent' => 1,
'App%5CEntity%5CTypeAgent%23removeAgent' => 0,
'[C]App%5CEntity%5CTypeAgent%23removeAgent' => 1,
'App%5CEntity%5CTypeAgent%24id' => 33,
'[C]App%5CEntity%5CTypeAgent%24id' => 1,
'App%5CEntity%5CTypeAgent%24libelle' => 88,
'[C]App%5CEntity%5CTypeAgent%24libelle' => 1,
'App%5CEntity%5CTypeAgent%24archived' => 101,
'[C]App%5CEntity%5CTypeAgent%24archived' => 1,
'App%5CEntity%5CTypeAgent%24agents' => 115,
'[C]App%5CEntity%5CTypeAgent%24agents' => 1,
'App%5CEntity%5CTypeBatiment' => 116,
'[C]App%5CEntity%5CTypeBatiment' => 1,
'App%5CEntity%5CTypeBatiment%23__construct' => 0,
'[C]App%5CEntity%5CTypeBatiment%23__construct' => 1,
'App%5CEntity%5CTypeBatiment%23getId' => 0,
'[C]App%5CEntity%5CTypeBatiment%23getId' => 1,
'App%5CEntity%5CTypeBatiment%23getTitre' => 0,
'[C]App%5CEntity%5CTypeBatiment%23getTitre' => 1,
'App%5CEntity%5CTypeBatiment%23setTitre' => 0,
'[C]App%5CEntity%5CTypeBatiment%23setTitre' => 1,
'App%5CEntity%5CTypeBatiment%23getDescription' => 0,
'[C]App%5CEntity%5CTypeBatiment%23getDescription' => 1,
'App%5CEntity%5CTypeBatiment%23setDescription' => 0,
'[C]App%5CEntity%5CTypeBatiment%23setDescription' => 1,
'App%5CEntity%5CTypeBatiment%23getBatiments' => 0,
'[C]App%5CEntity%5CTypeBatiment%23getBatiments' => 1,
'App%5CEntity%5CTypeBatiment%23addBatiment' => 0,
'[C]App%5CEntity%5CTypeBatiment%23addBatiment' => 1,
'App%5CEntity%5CTypeBatiment%23removeBatiment' => 0,
'[C]App%5CEntity%5CTypeBatiment%23removeBatiment' => 1,
'App%5CEntity%5CTypeBatiment%24id' => 117,
'[C]App%5CEntity%5CTypeBatiment%24id' => 1,
'App%5CEntity%5CTypeBatiment%24titre' => 118,
'[C]App%5CEntity%5CTypeBatiment%24titre' => 1,
'App%5CEntity%5CTypeBatiment%24description' => 37,
'[C]App%5CEntity%5CTypeBatiment%24description' => 1,
'App%5CEntity%5CTypeBatiment%24batiments' => 119,
'[C]App%5CEntity%5CTypeBatiment%24batiments' => 1,
'App%5CEntity%5CTypeEntite' => 120,
'[C]App%5CEntity%5CTypeEntite' => 1,
'App%5CEntity%5CTypeEntite%23__construct' => 0,
'[C]App%5CEntity%5CTypeEntite%23__construct' => 1,
'App%5CEntity%5CTypeEntite%23getId' => 0,
'[C]App%5CEntity%5CTypeEntite%23getId' => 1,
'App%5CEntity%5CTypeEntite%23getTitre' => 0,
'[C]App%5CEntity%5CTypeEntite%23getTitre' => 1,
'App%5CEntity%5CTypeEntite%23setTitre' => 0,
'[C]App%5CEntity%5CTypeEntite%23setTitre' => 1,
'App%5CEntity%5CTypeEntite%23getDescription' => 0,
'[C]App%5CEntity%5CTypeEntite%23getDescription' => 1,
'App%5CEntity%5CTypeEntite%23setDescription' => 0,
'[C]App%5CEntity%5CTypeEntite%23setDescription' => 1,
'App%5CEntity%5CTypeEntite%23getActive' => 0,
'[C]App%5CEntity%5CTypeEntite%23getActive' => 1,
'App%5CEntity%5CTypeEntite%23setActive' => 0,
'[C]App%5CEntity%5CTypeEntite%23setActive' => 1,
'App%5CEntity%5CTypeEntite%23getEntites' => 0,
'[C]App%5CEntity%5CTypeEntite%23getEntites' => 1,
'App%5CEntity%5CTypeEntite%23addEntite' => 0,
'[C]App%5CEntity%5CTypeEntite%23addEntite' => 1,
'App%5CEntity%5CTypeEntite%23removeEntite' => 0,
'[C]App%5CEntity%5CTypeEntite%23removeEntite' => 1,
'App%5CEntity%5CTypeEntite%24id' => 33,
'[C]App%5CEntity%5CTypeEntite%24id' => 1,
'App%5CEntity%5CTypeEntite%24titre' => 121,
'[C]App%5CEntity%5CTypeEntite%24titre' => 1,
'App%5CEntity%5CTypeEntite%24description' => 122,
'[C]App%5CEntity%5CTypeEntite%24description' => 1,
'App%5CEntity%5CTypeEntite%24active' => 123,
'[C]App%5CEntity%5CTypeEntite%24active' => 1,
'App%5CEntity%5CTypeEntite%24entites' => 124,
'[C]App%5CEntity%5CTypeEntite%24entites' => 1,
'App%5CEntity%5CTypeIncident' => 125,
'[C]App%5CEntity%5CTypeIncident' => 1,
'App%5CEntity%5CTypeIncident%23__construct' => 0,
'[C]App%5CEntity%5CTypeIncident%23__construct' => 1,
'App%5CEntity%5CTypeIncident%23getId' => 0,
'[C]App%5CEntity%5CTypeIncident%23getId' => 1,
'App%5CEntity%5CTypeIncident%23getTitre' => 0,
'[C]App%5CEntity%5CTypeIncident%23getTitre' => 1,
'App%5CEntity%5CTypeIncident%23setTitre' => 0,
'[C]App%5CEntity%5CTypeIncident%23setTitre' => 1,
'App%5CEntity%5CTypeIncident%23getDescription' => 0,
'[C]App%5CEntity%5CTypeIncident%23getDescription' => 1,
'App%5CEntity%5CTypeIncident%23setDescription' => 0,
'[C]App%5CEntity%5CTypeIncident%23setDescription' => 1,
'App%5CEntity%5CTypeIncident%23getIncidents' => 0,
'[C]App%5CEntity%5CTypeIncident%23getIncidents' => 1,
'App%5CEntity%5CTypeIncident%23addIncident' => 0,
'[C]App%5CEntity%5CTypeIncident%23addIncident' => 1,
'App%5CEntity%5CTypeIncident%23removeIncident' => 0,
'[C]App%5CEntity%5CTypeIncident%23removeIncident' => 1,
'App%5CEntity%5CTypeIncident%23getActive' => 0,
'[C]App%5CEntity%5CTypeIncident%23getActive' => 1,
'App%5CEntity%5CTypeIncident%23setActive' => 0,
'[C]App%5CEntity%5CTypeIncident%23setActive' => 1,
'App%5CEntity%5CTypeIncident%24id' => 33,
'[C]App%5CEntity%5CTypeIncident%24id' => 1,
'App%5CEntity%5CTypeIncident%24titre' => 88,
'[C]App%5CEntity%5CTypeIncident%24titre' => 1,
'App%5CEntity%5CTypeIncident%24description' => 88,
'[C]App%5CEntity%5CTypeIncident%24description' => 1,
'App%5CEntity%5CTypeIncident%24incidents' => 126,
'[C]App%5CEntity%5CTypeIncident%24incidents' => 1,
'App%5CEntity%5CTypeIncident%24active' => 123,
'[C]App%5CEntity%5CTypeIncident%24active' => 1,
'App%5CEntity%5CTypeLocalisation' => 127,
'[C]App%5CEntity%5CTypeLocalisation' => 1,
'App%5CEntity%5CTypeLocalisation%23__construct' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23__construct' => 1,
'App%5CEntity%5CTypeLocalisation%23getId' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23getId' => 1,
'App%5CEntity%5CTypeLocalisation%23getTitre' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23getTitre' => 1,
'App%5CEntity%5CTypeLocalisation%23setTitre' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23setTitre' => 1,
'App%5CEntity%5CTypeLocalisation%23getDescription' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23getDescription' => 1,
'App%5CEntity%5CTypeLocalisation%23setDescription' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23setDescription' => 1,
'App%5CEntity%5CTypeLocalisation%23getActive' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23getActive' => 1,
'App%5CEntity%5CTypeLocalisation%23setActive' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23setActive' => 1,
'App%5CEntity%5CTypeLocalisation%23getLocalisations' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23getLocalisations' => 1,
'App%5CEntity%5CTypeLocalisation%23addLocalisation' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23addLocalisation' => 1,
'App%5CEntity%5CTypeLocalisation%23removeLocalisation' => 0,
'[C]App%5CEntity%5CTypeLocalisation%23removeLocalisation' => 1,
'App%5CEntity%5CTypeLocalisation%24id' => 128,
'[C]App%5CEntity%5CTypeLocalisation%24id' => 1,
'App%5CEntity%5CTypeLocalisation%24titre' => 129,
'[C]App%5CEntity%5CTypeLocalisation%24titre' => 1,
'App%5CEntity%5CTypeLocalisation%24description' => 37,
'[C]App%5CEntity%5CTypeLocalisation%24description' => 1,
'App%5CEntity%5CTypeLocalisation%24active' => 123,
'[C]App%5CEntity%5CTypeLocalisation%24active' => 1,
'App%5CEntity%5CTypeLocalisation%24localisations' => 130,
'[C]App%5CEntity%5CTypeLocalisation%24localisations' => 1,
'App%5CEntity%5CUser' => 131,
'[C]App%5CEntity%5CUser' => 1,
'App%5CEntity%5CUser%23__construct' => 0,
'[C]App%5CEntity%5CUser%23__construct' => 1,
'App%5CEntity%5CUser%23getId' => 0,
'[C]App%5CEntity%5CUser%23getId' => 1,
'App%5CEntity%5CUser%23getEmail' => 0,
'[C]App%5CEntity%5CUser%23getEmail' => 1,
'App%5CEntity%5CUser%23setEmail' => 0,
'[C]App%5CEntity%5CUser%23setEmail' => 1,
'App%5CEntity%5CUser%23getUserIdentifier' => 0,
'[C]App%5CEntity%5CUser%23getUserIdentifier' => 1,
'App%5CEntity%5CUser%23getUsername' => 0,
'[C]App%5CEntity%5CUser%23getUsername' => 1,
'App%5CEntity%5CUser%23getRoles' => 0,
'[C]App%5CEntity%5CUser%23getRoles' => 1,
'App%5CEntity%5CUser%23setRoles' => 0,
'[C]App%5CEntity%5CUser%23setRoles' => 1,
'App%5CEntity%5CUser%23getPassword' => 0,
'[C]App%5CEntity%5CUser%23getPassword' => 1,
'App%5CEntity%5CUser%23setPassword' => 0,
'[C]App%5CEntity%5CUser%23setPassword' => 1,
'App%5CEntity%5CUser%23getSalt' => 0,
'[C]App%5CEntity%5CUser%23getSalt' => 1,
'App%5CEntity%5CUser%23eraseCredentials' => 0,
'[C]App%5CEntity%5CUser%23eraseCredentials' => 1,
'App%5CEntity%5CUser%23getPrenom' => 0,
'[C]App%5CEntity%5CUser%23getPrenom' => 1,
'App%5CEntity%5CUser%23setPrenom' => 0,
'[C]App%5CEntity%5CUser%23setPrenom' => 1,
'App%5CEntity%5CUser%23getNom' => 0,
'[C]App%5CEntity%5CUser%23getNom' => 1,
'App%5CEntity%5CUser%23setNom' => 0,
'[C]App%5CEntity%5CUser%23setNom' => 1,
'App%5CEntity%5CUser%23getDateDeNaissance' => 0,
'[C]App%5CEntity%5CUser%23getDateDeNaissance' => 1,
'App%5CEntity%5CUser%23setDateDeNaissance' => 0,
'[C]App%5CEntity%5CUser%23setDateDeNaissance' => 1,
'App%5CEntity%5CUser%23getIsBloked' => 0,
'[C]App%5CEntity%5CUser%23getIsBloked' => 1,
'App%5CEntity%5CUser%23setIsBloked' => 0,
'[C]App%5CEntity%5CUser%23setIsBloked' => 1,
'App%5CEntity%5CUser%23getCreatedAt' => 0,
'[C]App%5CEntity%5CUser%23getCreatedAt' => 1,
'App%5CEntity%5CUser%23setCreatedAt' => 0,
'[C]App%5CEntity%5CUser%23setCreatedAt' => 1,
'App%5CEntity%5CUser%23getType' => 0,
'[C]App%5CEntity%5CUser%23getType' => 1,
'App%5CEntity%5CUser%23setType' => 0,
'[C]App%5CEntity%5CUser%23setType' => 1,
'App%5CEntity%5CUser%23getSuperAdmin' => 0,
'[C]App%5CEntity%5CUser%23getSuperAdmin' => 1,
'App%5CEntity%5CUser%23setSuperAdmin' => 0,
'[C]App%5CEntity%5CUser%23setSuperAdmin' => 1,
'App%5CEntity%5CUser%23getAdmin' => 0,
'[C]App%5CEntity%5CUser%23getAdmin' => 1,
'App%5CEntity%5CUser%23setAdmin' => 0,
'[C]App%5CEntity%5CUser%23setAdmin' => 1,
'App%5CEntity%5CUser%23getGestionnaire' => 0,
'[C]App%5CEntity%5CUser%23getGestionnaire' => 1,
'App%5CEntity%5CUser%23setGestionnaire' => 0,
'[C]App%5CEntity%5CUser%23setGestionnaire' => 1,
'App%5CEntity%5CUser%23getAgent' => 0,
'[C]App%5CEntity%5CUser%23getAgent' => 1,
'App%5CEntity%5CUser%23setAgent' => 0,
'[C]App%5CEntity%5CUser%23setAgent' => 1,
'App%5CEntity%5CUser%23getToken' => 0,
'[C]App%5CEntity%5CUser%23getToken' => 1,
'App%5CEntity%5CUser%23setToken' => 0,
'[C]App%5CEntity%5CUser%23setToken' => 1,
'App%5CEntity%5CUser%23getTokenConfirm' => 0,
'[C]App%5CEntity%5CUser%23getTokenConfirm' => 1,
'App%5CEntity%5CUser%23setTokenConfirm' => 0,
'[C]App%5CEntity%5CUser%23setTokenConfirm' => 1,
'App%5CEntity%5CUser%23getTokenUpdatedAt' => 0,
'[C]App%5CEntity%5CUser%23getTokenUpdatedAt' => 1,
'App%5CEntity%5CUser%23setTokenUpdatedAt' => 0,
'[C]App%5CEntity%5CUser%23setTokenUpdatedAt' => 1,
'App%5CEntity%5CUser%23getProprietaire' => 0,
'[C]App%5CEntity%5CUser%23getProprietaire' => 1,
'App%5CEntity%5CUser%23setProprietaire' => 0,
'[C]App%5CEntity%5CUser%23setProprietaire' => 1,
'App%5CEntity%5CUser%24id' => 132,
'[C]App%5CEntity%5CUser%24id' => 1,
'App%5CEntity%5CUser%24email' => 133,
'[C]App%5CEntity%5CUser%24email' => 1,
'App%5CEntity%5CUser%24roles' => 0,
'[C]App%5CEntity%5CUser%24roles' => 1,
'App%5CEntity%5CUser%24password' => 134,
'[C]App%5CEntity%5CUser%24password' => 1,
'App%5CEntity%5CUser%24prenom' => 135,
'[C]App%5CEntity%5CUser%24prenom' => 1,
'App%5CEntity%5CUser%24nom' => 135,
'[C]App%5CEntity%5CUser%24nom' => 1,
'App%5CEntity%5CUser%24dateDeNaissance' => 136,
'[C]App%5CEntity%5CUser%24dateDeNaissance' => 1,
'App%5CEntity%5CUser%24isBloked' => 137,
'[C]App%5CEntity%5CUser%24isBloked' => 1,
'App%5CEntity%5CUser%24createdAt' => 138,
'[C]App%5CEntity%5CUser%24createdAt' => 1,
'App%5CEntity%5CUser%24type' => 139,
'[C]App%5CEntity%5CUser%24type' => 1,
'App%5CEntity%5CUser%24superAdmin' => 140,
'[C]App%5CEntity%5CUser%24superAdmin' => 1,
'App%5CEntity%5CUser%24admin' => 141,
'[C]App%5CEntity%5CUser%24admin' => 1,
'App%5CEntity%5CUser%24gestionnaire' => 142,
'[C]App%5CEntity%5CUser%24gestionnaire' => 1,
'App%5CEntity%5CUser%24agent' => 143,
'[C]App%5CEntity%5CUser%24agent' => 1,
'App%5CEntity%5CUser%24token' => 37,
'[C]App%5CEntity%5CUser%24token' => 1,
'App%5CEntity%5CUser%24tokenConfirm' => 101,
'[C]App%5CEntity%5CUser%24tokenConfirm' => 1,
'App%5CEntity%5CUser%24tokenUpdatedAt' => 144,
'[C]App%5CEntity%5CUser%24tokenUpdatedAt' => 1,
'App%5CEntity%5CUser%24proprietaire' => 145,
'[C]App%5CEntity%5CUser%24proprietaire' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23__construct' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23__construct' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainAction' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainAction' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLitePlatform' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLitePlatform' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLServerPlatform' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLServerPlatform' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOtherPlatform' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOtherPlatform' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOraclePlatform' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOraclePlatform' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24twig' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24twig' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24registry' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24registry' => 1,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24profiler' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24profiler' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23__construct' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23__construct' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23addInsert' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23addInsert' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInserts' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInserts' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectSQL' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectSQL' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCountSQL' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCountSQL' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInsertSQL' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInsertSQL' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getResultSetMapping' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getResultSetMapping' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectConditionStatementSQL' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectConditionStatementSQL' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23exists' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23exists' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCacheRegion' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCacheRegion' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getEntityHydrator' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getEntityHydrator' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeEntityCache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeEntityCache' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeJoinedAssociations' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeJoinedAssociations' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getHash' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getHash' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandParameters' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandParameters' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandCriteriaParameters' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandCriteriaParameters' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getClassMetadata' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getClassMetadata' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getManyToManyCollection' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOneToManyCollection' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOwningTable' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOwningTable' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23executeInserts' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23executeInserts' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23load' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23load' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadAll' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadAll' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadById' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadById' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23count' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23count' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadCriteria' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadCriteria' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadManyToManyCollection' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToManyCollection' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToOneEntity' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToOneEntity' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23lock' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23lock' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23refresh' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23refresh' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23buildCollectionCacheKey' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23buildCollectionCacheKey' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionComplete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionComplete' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionRolledBack' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionRolledBack' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23update' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23delete' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24uow' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24uow' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24metadataFactory' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24metadataFactory' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24persister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24persister' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24class' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24class' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24queuedCache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24queuedCache' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24region' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24region' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampRegion' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampRegion' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampKey' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampKey' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24hydrator' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24hydrator' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cache' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cacheLogger' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cacheLogger' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24regionName' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24regionName' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24joinedAssociations' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24joinedAssociations' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23getEntityHydrator' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23getEntityHydrator' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23storeEntityCache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23storeEntityCache' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23getCacheRegion' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23getCacheRegion' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getClassMetadata' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getClassMetadata' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getResultSetMapping' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getResultSetMapping' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInserts' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInsertSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInsertSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getCountSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getCountSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandParameters' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandCriteriaParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandCriteriaParameters' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectConditionStatementSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectConditionStatementSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23addInsert' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23addInsert' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23executeInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23executeInserts' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23count' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23count' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOwningTable' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOwningTable' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23load' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23load' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadById' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadById' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToOneEntity' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToOneEntity' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23refresh' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23refresh' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadCriteria' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadCriteria' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadAll' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadAll' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getManyToManyCollection' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadManyToManyCollection' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToManyCollection' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23lock' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23lock' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOneToManyCollection' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23exists' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23exists' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionComplete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionComplete' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23delete' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23update' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23updateCache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23updateCache' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%23update' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23__construct' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23__construct' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionComplete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionComplete' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23delete' => 1,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23update' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23prepareInsertData' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23prepareInsertData' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getDiscriminatorColumnTableName' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getDiscriminatorColumnTableName' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectColumnSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectColumnSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectJoinColumnSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectJoinColumnSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23__construct' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23__construct' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassMetadata' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassMetadata' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getResultSetMapping' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getResultSetMapping' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23addInsert' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23addInsert' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInserts' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23executeInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23executeInserts' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23assignDefaultVersionAndUpsertableValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23assignDefaultVersionAndUpsertableValues' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23fetchVersionAndNotUpsertableValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23fetchVersionAndNotUpsertableValues' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23update' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23updateTable' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23updateTable' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23deleteJoinTableRecords' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23deleteJoinTableRecords' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23delete' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareUpdateData' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareUpdateData' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOwningTable' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOwningTable' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23load' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23load' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadById' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadById' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToOneEntity' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToOneEntity' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23refresh' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23refresh' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23count' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23count' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCriteria' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCriteria' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandCriteriaParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandCriteriaParameters' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadAll' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadAll' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyCollection' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadManyToManyCollection' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getCountSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getCountSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOrderBySQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOrderBySQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnsSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnsSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnAssociationSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnAssociationSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectManyToManyJoinSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectManyToManyJoinSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertColumnList' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertColumnList' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLTableAlias' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLTableAlias' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23lock' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23lock' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getLockTablesSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getLockTablesSql' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionCriteriaSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionCriteriaSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyCollection' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToManyCollection' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandParameters' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23exists' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23exists' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getJoinSQLForJoinColumns' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getJoinSQLForJoinColumns' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLColumnAlias' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLColumnAlias' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23generateFilterConditionSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23generateFilterConditionSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23switchPersisterContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23switchPersisterContext' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassIdentifiersTypes' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassIdentifiersTypes' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24class' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24class' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24conn' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24conn' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24platform' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24platform' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24em' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24em' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24queuedInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24queuedInserts' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24columnTypes' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24columnTypes' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quotedColumns' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quotedColumns' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quoteStrategy' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quoteStrategy' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24currentPersisterContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24currentPersisterContext' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23extractIdentifierTypes' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23extractIdentifierTypes' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareInsertData' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareInsertData' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadArrayFromResult' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadArrayFromResult' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCollectionFromStatement' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCollectionFromStatement' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyStatement' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyStatement' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementColumnSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementColumnSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyStatement' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyStatement' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandToManyParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandToManyParameters' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getTypes' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getTypes' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getValues' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getIndividualValue' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getIndividualValue' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24comparisonMap' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24comparisonMap' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24insertSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24insertSql' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24identifierFlattener' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24identifierFlattener' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24limitsHandlingContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24limitsHandlingContext' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24noLimitsContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24noLimitsContext' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%23__construct' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%23__construct' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24class' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24class' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24rsm' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24rsm' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectColumnListSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectColumnListSql' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectJoinSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectJoinSql' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlAliasCounter' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlAliasCounter' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlTableAliases' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlTableAliases' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24handlesLimits' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24handlesLimits' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getDiscriminatorColumnTableName' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getDiscriminatorColumnTableName' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getVersionedClassMetadata' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getVersionedClassMetadata' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getOwningTable' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getOwningTable' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23executeInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23executeInserts' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23update' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23update' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23delete' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getCountSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getCountSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getLockTablesSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getLockTablesSql' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectColumnsSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectColumnsSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getInsertColumnList' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getInsertColumnList' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23assignDefaultVersionAndUpsertableValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23assignDefaultVersionAndUpsertableValues' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getJoinSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getJoinSql' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSQLResultCasing' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSQLResultCasing' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24owningTableMap' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24owningTableMap' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24quotedTableMap' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24quotedTableMap' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getDiscriminatorColumnTableName' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getDiscriminatorColumnTableName' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectColumnsSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectColumnsSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getInsertColumnList' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getInsertColumnList' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLTableAlias' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLTableAlias' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionCriteriaSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionCriteriaSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionDiscriminatorValueSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionDiscriminatorValueSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23generateFilterConditionSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23generateFilterConditionSQL' => 1,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLResultCasing' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLResultCasing' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__construct' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__construct' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23redirectAction' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23redirectAction' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23urlRedirectAction' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23urlRedirectAction' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__invoke' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__invoke' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24router' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24router' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpPort' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpPort' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpsPort' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpsPort' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__construct' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__construct' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23templateAction' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23templateAction' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__invoke' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__invoke' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24twig' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24twig' => 1,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver' => 1,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23__construct' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23__construct' => 1,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23supports' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23supports' => 1,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23resolve' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23resolve' => 1,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%24tokenStorage' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%24tokenStorage' => 1,

], [

0 => [],
1 => 1654088313,
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/gestionnaire/batiments',
                ],
                'name' => [
                    'getBatiment',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/batiments/{id}/owner/user',
                ],
                'name' => [
                    'getBatimentOwnerUser',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/batiments/{id}/owner/entite',
                ],
                'name' => [
                    'getBatimentOwnerEntite',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/batiments/owner/block/{id}',
                ],
                'name' => [
                    'blockPropUser',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/batiments/owner/unblock/{id}',
                ],
                'name' => [
                    'unblockPropUser',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/batiments/{id}/localisation',
                ],
                'name' => [
                    'addLocalisation',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/employes',
                ],
                'name' => [
                    'get_list_employes',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/employes/{id}/edit/{gestionnaire}',
                ],
                'name' => [
                    'edit_employe',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/entite/{id}/block',
                ],
                'name' => [
                    'block_entite',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/entite/{id}/unblock',
                ],
                'name' => [
                    'unblock_entite',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/admin/entites',
                ],
                'name' => [
                    'getEntitesOfAdmin',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/gestionnaire/entites',
                ],
                'name' => [
                    'getEntitesOfGestionnaire',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/admin/entite/son',
                ],
                'name' => [
                    'getEntiteSon',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/admin/entite/father/type',
                ],
                'name' => [
                    'getEntiteatherByType',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/entite/{id}/localisation',
                ],
                'name' => [
                    'addLocalisationEntite',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    'api/param_types_agents',
                ],
                'name' => [
                    'add_type_agent',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    'api/type_incidents',
                ],
                'name' => [
                    'add_type_incident',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    'api/param_types_agents',
                ],
                'name' => [
                    'get_types_agents',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    'api/param_types_demandes',
                ],
                'name' => [
                    'add_type_demande',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/getUserInfos/{id}',
                ],
                'name' => [
                    'user_infos_show',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/user/infos',
                ],
                'name' => [
                    'get_infos_user',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/admin/entites',
                ],
                'name' => [
                    'get_entite_admin',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/password/request',
                ],
                'name' => [
                    'password_request',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/password/reset/{token}',
                ],
                'name' => [
                    'password_reset_post',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/password/reset/{token}',
                ],
                'name' => [
                    'password_reset_put',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'collectionOperations' => [
                    [
                        'get' => [
                            'method' => 'GET',
                            'path' => '/admins',
                        ],
                        'post' => [
                            'method' => 'POST',
                            'path' => '/admins',
                        ],
                    ],
                ],
                'itemOperations' => [
                    [
                        'get' => [
                            'method' => 'GET',
                            'path' => '/admins/{id}',
                        ],
                        'put' => [
                            'method' => 'PUT',
                            'path' => '/admins/{id}',
                        ],
                        'delete' => [
                            'method' => 'DELETE',
                            'path' => '/admins/{id}',
                        ],
                    ],
                ],
                'attributes' => [
                    [
                        'normalization_context' => [
                            'groups' => [
                                'admin:read',
                            ],
                        ],
                        'denormalization_context' => [
                            'groups' => [
                                'admin:write',
                            ],
                        ],
                    ],
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\AdminRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'admin:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
                'inversedBy' => [
                    'admin',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'nullable' => [
                    2 => false,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'admin:write',
                        'admin:read',
                        'employe_entite',
                        'entites:write',
                        'employes:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'admin:read',
                        'admin:write',
                        'entites:write',
                        'employes:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'mappedBy' => [
                    'admins',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'admin:read',
                        'admin:write',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    1 => 'App\\Repository\\AgentRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
                'inversedBy' => [
                    'agent',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TypeAgent',
                ],
                'inversedBy' => [
                    'agents',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'inversedBy' => [
                    'agents',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\BatimentRepository',
                ],
                'attributes' => [
                    1 => [
                        'normalization_context' => [
                            'groups' => [
                                'batiment:read',
                            ],
                        ],
                        'denormalization_context' => [
                            'groups' => [
                                'batiment:write',
                            ],
                        ],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'batiment:read',
                        'BatimentGest',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'batiment:read',
                        'batiment:write',
                        'BatimentGest',
                        'entites:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'batiment:read',
                        'batiment:write',
                        'BatimentGest',
                        'entites:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Contact',
                ],
                'inversedBy' => [
                    'batiment',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'batiment:read',
                        'BatimentGest',
                        'entites:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Localisation',
                ],
                'inversedBy' => [
                    'batiments',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'batiment:read',
                        'batiment:write',
                        'BatimentGest',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'inversedBy' => [
                    'batiments',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'batiment:read',
                        'batiment:write',
                        'BatimentGest',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TypeBatiment',
                ],
                'inversedBy' => [
                    'batiments',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'batiment:read',
                        'batiment:write',
                        'BatimentGest',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'batiment:read',
                        'batiment:write',
                        'BatimentGest',
                        'entites:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'batiment',
                ],
                'targetEntity' => [
                    'App\\Entity\\BatimentOwner',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\BatimentOwnerRepository',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'UserOwner',
                        'EntiteOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'batimentOwner',
                ],
                'targetEntity' => [
                    'App\\Entity\\Proprietaire',
                ],
                'cascade' => [
                    [
                        'persist',
                    ],
                ],
                'orphanRemoval' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'EntiteOwner',
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Batiment',
                ],
                'inversedBy' => [
                    'batimentOwners',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    1 => 'App\\Repository\\ContactRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone $p['Symfony\\Component\\Serializer\\Annotation\\Groups'],
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'entites:read',
                    ],
                    [
                        'superadmin:read',
                        'admin:read',
                        'superadmin:write',
                        'admin:write',
                        'gestionnaire:read',
                        'gestionnaire:write',
                        'BatimentGest',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                        'BatimentGest',
                        'batiment:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                        'employes:read',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                        'batiment:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                        'batiment:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                        'batiment:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Batiment',
                ],
                'mappedBy' => [
                    'contact',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'collectionOperations' => [
                    [
                        'get' => [
                            'method' => 'GET',
                            'path' => '/entites',
                        ],
                        'post' => [
                            'method' => 'POST',
                            'path' => '/entites',
                        ],
                    ],
                ],
                'itemOperations' => [
                    [
                        'get' => [
                            'method' => 'GET',
                            'path' => '/entites/{id}',
                        ],
                        'employes_of_one_entite' => [
                            'method' => 'GET',
                            'path' => '/entites/{id}/employes',
                            'normalization_context' => [
                                'groups' => [
                                    'employe_entite',
                                ],
                            ],
                        ],
                        'put' => [
                            'method' => 'PUT',
                            'path' => '/entites/{id}',
                        ],
                        'archived' => [
                            'method' => 'PUT',
                            'path' => '/entites/{id}/archived',
                        ],
                        'delete' => [
                            'method' => 'DELETE',
                            'path' => '/entites/{id}',
                        ],
                    ],
                ],
                'attributes' => [
                    [
                        'normalization_context' => [
                            'groups' => [
                                'entites:read',
                            ],
                        ],
                        'denormalization_context' => [
                            'groups' => [
                                'entites:write',
                            ],
                        ],
                    ],
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\EntiteRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'entites:read',
                        'admin:read',
                        'gestionnaire:read',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                        'batiment:read',
                        'BatimentOwner',
                        'EntiteOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
64 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                        'batiment:read',
                        'BatimentOwner',
                        'EntiteOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
65 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                        'BatimentOwner',
                        'EntiteOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
66 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Contact',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'entites:read',
                        'entites:write',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
67 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
68 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'entrepriseSecurite',
                ],
                'targetEntity' => [
                    'App\\Entity\\Agent',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
69 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'entite',
                ],
                'targetEntity' => [
                    'App\\Entity\\ParamTypesDemandes',
                ],
                'orphanRemoval' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
70 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
71 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'entite',
                ],
                'targetEntity' => [
                    'App\\Entity\\Incident',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
72 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TypeEntite',
                ],
                'inversedBy' => [
                    'entites',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'employes:read',
                        'EntiteOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
73 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Admin',
                ],
                'inversedBy' => [
                    'entites',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                        'admin:read',
                        'employes:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
74 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Gestionnaire',
                ],
                'inversedBy' => [
                    'entites',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'admin:read',
                        'employes:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
75 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entiteSon',
                        'entites:write',
                        'entites:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
76 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'inversedBy' => [
                    'son',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
77 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'entite',
                ],
                'targetEntity' => [
                    'App\\Entity\\Batiment',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
78 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Proprietaire',
                ],
                'mappedBy' => [
                    'entite',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
79 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'entites:write',
                        'employes:read',
                        'adminEntite:read',
                        'entiteSon',
                        'batiment:read',
                        'BatimentOwner',
                        'EntiteOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
80 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'attributes' => [
                    [
                        'normalization_context' => [
                            'groups' => [
                                'gestionnaire:read',
                            ],
                        ],
                        'denormalization_context' => [
                            'groups' => [
                                'gestionnaire:write',
                            ],
                        ],
                    ],
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\GestionnaireRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
81 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'gestionnaire:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
82 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
                'inversedBy' => [
                    'gestionnaire',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'gestionnaire:write',
                        'gestionnaire:read',
                        'employe_entite',
                        'gestionnaire:read',
                        'employes:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
83 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'choices' => [
                    2 => [
                        1,
                        2,
                        3,
                        4,
                    ],
                ],
                'message' => [
                    2 => 'Choissez un type de gestionnaire valide',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'gestionnaire:read',
                        'employe_entite',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
84 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'gestionnaire:read',
                        'gestionnaire:write',
                        'employes:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
85 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'mappedBy' => [
                    'gestionnaires',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'gestionnaire:read',
                        'gestionnaire:write',
                        'employes:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
86 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    1 => 'App\\Repository\\IncidentRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
87 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
88 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
89 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'inversedBy' => [
                    'incidents',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
90 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TypeIncident',
                ],
                'inversedBy' => [
                    'incidents',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
91 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
        ],
        null,
        [
            'stdClass' => [
                'itemOperations' => [
                    [
                        'get' => [
                            'path' => '/localisations/{id}',
                        ],
                    ],
                ],
                'attributes' => [
                    [
                        'normalization_context' => [
                            'groups' => [
                                'local:read',
                            ],
                        ],
                    ],
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\LocalisationRepository',
                ],
                'filterClass' => [
                    2 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
                ],
                'properties' => [
                    2 => [
                        'niveau' => 'exact',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
92 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'local:read',
                        'localByType:read',
                        'BatimentGest',
                        'batiment:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
93 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'local:read',
                        'localByType:read',
                        'BatimentGest',
                        'batiment:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
94 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TypeLocalisation',
                ],
                'inversedBy' => [
                    'localisations',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'local:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
95 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'local:read',
                        'localByType:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
96 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Localisation',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'local:read',
                        'localByType:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
97 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'local:read',
                        'localByType:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
98 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'localisation',
                ],
                'targetEntity' => [
                    'App\\Entity\\Batiment',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
99 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    1 => 'App\\Repository\\ParamTypesAgentsRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
100 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
101 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
102 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'inversedBy' => [
                    'paramTypesAgents',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
103 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    1 => 'App\\Repository\\ParamTypesDemandesRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
104 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'inversedBy' => [
                    'paramTypesDemandes',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
105 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
106 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\ProprietaireRepository',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
107 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'EntiteOwner',
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
108 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
                'inversedBy' => [
                    'proprietaire',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
109 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
                'inversedBy' => [
                    'proprietaire',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'EntiteOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
110 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\BatimentOwner',
                ],
                'inversedBy' => [
                    'proprietaires',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'EntiteOwner',
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
111 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'attributes' => [
                    [
                        'normalization_context' => [
                            'groups' => [
                                'superadmin:read',
                            ],
                        ],
                        'denormalization_context' => [
                            'groups' => [
                                'superadmin:write',
                            ],
                        ],
                    ],
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\SuperAdminRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
112 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'superadmin:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
113 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
                'inversedBy' => [
                    'superAdmin',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'superadmin:write',
                        'superadmin:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
114 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    1 => 'App\\Repository\\TypeAgentRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
115 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Agent',
                ],
                'mappedBy' => [
                    'type',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
116 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\TypeBatimentRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
117 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'BatimentGest',
                        'batiment:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
118 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'BatimentGest',
                        'batiment:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
119 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'typeBatiment',
                ],
                'targetEntity' => [
                    'App\\Entity\\Batiment',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
120 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    1 => 'App\\Repository\\TypeEntiteRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
121 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:read',
                        'employes:read',
                        'EntiteOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
122 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entite:read',
                        'employes:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
123 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
124 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'typeEntite',
                ],
                'targetEntity' => [
                    'App\\Entity\\Entite',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
125 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    1 => 'App\\Repository\\TypeIncidentRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
126 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'typeIncident',
                ],
                'targetEntity' => [
                    'App\\Entity\\Incident',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
127 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'itemOperations' => [
                    [
                        'getLocalOfType' => [
                            'path' => '/type_localisations/{id}/localisations',
                            'normalization_context' => [
                                'groups' => [
                                    'localByType:read',
                                ],
                            ],
                            'method' => 'GET',
                        ],
                        'getLocalById' => [
                            'path' => '/type_localisations/{id}',
                            'method' => 'GET',
                        ],
                    ],
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\TypeLocalisationRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
128 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'local:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
129 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'local:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
130 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'typeLocalisation',
                ],
                'targetEntity' => [
                    'App\\Entity\\Localisation',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'localByType:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
131 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'attributes' => [
                    [
                        'normalization_context' => [
                            'groups' => [
                                'user:read',
                            ],
                        ],
                    ],
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\UserRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
132 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'user:read',
                        'superadmin:read',
                        'admin:read',
                        'gestionnaire:read',
                        'user:read',
                        'employes:read',
                        'BatimentOwner',
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
133 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    180,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'unique' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'user:read',
                        'superadmin:write',
                        'superadmin:read',
                        'admin:write',
                        'admin:read',
                        'gestionnaire:write',
                        'gestionnaire:read',
                        'employe_entite',
                        'entites:write',
                        'employes:read',
                        'BatimentOwner',
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
134 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'superadmin:write',
                        'admin:write',
                        'gestionnaire:write',
                        'entites:write',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
135 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'user:read',
                        'superadmin:write',
                        'superadmin:read',
                        'admin:write',
                        'admin:read',
                        'gestionnaire:write',
                        'gestionnaire:read',
                        'employe_entite',
                        'entites:write',
                        'employes:read',
                        'BatimentOwner',
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
136 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'user:read',
                        'superadmin:write',
                        'superadmin:read',
                        'admin:write',
                        'admin:read',
                        'gestionnaire:write',
                        'gestionnaire:read',
                        'employe_entite',
                        'entites:write',
                        'employes:read',
                        'BatimentOwner',
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
137 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'user:read',
                        'superadmin:write',
                        'superadmin:read',
                        'admin:write',
                        'admin:read',
                        'gestionnaire:write',
                        'gestionnaire:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
138 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'user:read',
                        'superadmin:read',
                        'admin:read',
                        'gestionnaire:read',
                        'user:read',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
139 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'user:read',
                        'superadmin:read',
                        'admin:read',
                        'gestionnaire:read',
                        'user:read',
                        'employe_entite',
                        'entites:write',
                        'employes:read',
                        'BatimentOwner',
                        'UserOwner',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
140 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\SuperAdmin',
                ],
                'mappedBy' => [
                    'user',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
141 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Admin',
                ],
                'mappedBy' => [
                    'user',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'entites:write',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
142 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Gestionnaire',
                ],
                'mappedBy' => [
                    'user',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
143 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Agent',
                ],
                'mappedBy' => [
                    'user',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
144 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
145 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Proprietaire',
                ],
                'mappedBy' => [
                    'user',
                ],
                'cascade' => [
                    [
                        'persist',
                        'remove',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},

]];
