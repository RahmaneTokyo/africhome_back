<?php //App_Entity_Entite

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\Entite',
                'id',
                'nom',
                'description',
                'contact',
                'isBloked',
                'agents',
                'paramTypesDemandes',
                'createdAt',
                'incidents',
                'typeEntite',
                'admins',
                'gestionnaires',
                'isEntreprise',
                'father',
                'batiments',
                'proprietaire',
                'type',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'nom' => $o[2],
                    'description' => $o[3],
                    'contact' => $o[4],
                    'isBloked' => $o[5],
                    'agents' => $o[6],
                    'paramTypesDemandes' => $o[7],
                    'createdAt' => $o[8],
                    'incidents' => $o[9],
                    'typeEntite' => $o[10],
                    'admins' => $o[11],
                    'gestionnaires' => $o[12],
                    'isEntreprise' => $o[13],
                    'father' => $o[14],
                    'batiments' => $o[15],
                    'proprietaire' => $o[16],
                    'type' => $o[17],
                ],
            ],
            'groups' => [
                1 => [
                    'entites:read',
                    'admin:read',
                    'gestionnaire:read',
                    'employes:read',
                    'adminEntite:read',
                    'entiteSon',
                    'batiment:read',
                    'BatimentOwner',
                    'EntiteOwner',
                ],
                [
                    'entites:read',
                    'entites:write',
                    'employes:read',
                    'adminEntite:read',
                    'entiteSon',
                    'batiment:read',
                    'BatimentOwner',
                    'EntiteOwner',
                ],
                [
                    'entites:read',
                    'entites:write',
                    'employes:read',
                    'adminEntite:read',
                    'entiteSon',
                    'BatimentOwner',
                    'EntiteOwner',
                ],
                [
                    'entites:read',
                    'entites:write',
                    'employes:read',
                    'adminEntite:read',
                    'entiteSon',
                ],
                [
                    'entites:read',
                ],
                8 => [
                    'entites:read',
                    'entites:write',
                ],
                10 => [
                    'entites:read',
                    'employes:read',
                    'EntiteOwner',
                ],
                [
                    'entites:read',
                    'entites:write',
                    'admin:read',
                    'employes:read',
                ],
                [
                    'entites:read',
                    'admin:read',
                    'employes:read',
                ],
                [
                    'entiteSon',
                    'entites:write',
                    'entites:read',
                ],
                15 => [
                    'entites:read',
                ],
                17 => [
                    'entites:read',
                    'entites:write',
                    'employes:read',
                    'adminEntite:read',
                    'entiteSon',
                    'batiment:read',
                    'BatimentOwner',
                    'EntiteOwner',
                ],
            ],
        ],
    ],
    $o[0],
    []
); }];
